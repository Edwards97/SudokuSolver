{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven\\\\Desktop\\\\Workspace\\\\SudokuSolver\\\\src\\\\Tabs\\\\home.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport '../App.css';\nimport './utility';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetTest = () => {\n      let test = [[3, 5, 9, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 7, 9], [0, 6, 0, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 8], [0, 3, 0, 2, 6, 0, 0, 0, 0], [0, 0, 8, 3, 0, 9, 2, 0, 7], [0, 0, 0, 0, 0, 8, 5, 0, 0], [0, 0, 1, 0, 0, 0, 6, 0, 0]];\n      /*\r\n      let test = [[0,9,0,    4,7,0,   0,0,0],\r\n      [0,0,3,    0,5,0,   0,0,7],\r\n      [0,5,1,    0,0,6,   0,0,0],\r\n      [0,0,0,    9,8,3,   0,0,0],\r\n      [0,0,0,    0,0,0,   0,2,6],\r\n      [3,0,0,    0,0,0,   0,7,0],\r\n      [0,0,6,    0,0,0,   0,0,0],\r\n      [0,4,0,    0,0,5,   9,0,0],\r\n      [0,0,0,    3,0,1,   5,0,0]];\r\n      let test = [[1,0,0,    0,0,7,   0,9,0],\r\n      [0,3,0,    0,2,0,   0,0,8],\r\n      [0,0,9,    6,0,0,   5,0,0],\r\n      [0,0,5,    3,0,0,   9,0,0],\r\n      [0,1,0,    0,8,0,   0,0,2],\r\n      [6,0,0,    0,0,4,   0,0,0],\r\n      [3,0,0,    0,0,0,   0,1,0],\r\n      [0,4,0,    0,0,0,   0,0,7],\r\n      [0,0,7,    0,0,0,   3,0,0]];*/\n\n      this.setState({\n        cycleCount: 0\n      });\n      this.setState({\n        map: test\n      });\n    };\n\n    this.handleInput = (event, index1, index2) => {\n      if (isNaN(event.target.value)) {\n        alert(\"Sudoku only uses numbers\");\n      } else {\n        let newMap = this.state.map.slice();\n        newMap[index1][index2] = Number(event.target.value);\n        this.setState({\n          map: newMap\n        });\n        this.printMap();\n      }\n    };\n\n    this.isfinished = newMap => {\n      //returns true if puzzle is finished, else false... ie checks for any values of 0 in grid\n      let answer = true;\n\n      for (let i = 0; i < 9; i++) {\n        for (let j = 0; j < 9; j++) {\n          if (newMap[i][j] === 0) {\n            answer = false;\n          } else {\n            continue;\n          }\n        } // end for w/ j\n\n      } //end for w/ i\n\n\n      return answer;\n    };\n\n    this.printMap = () => {\n      //prints the current state and the possible answers if any cells are unfilled\n      console.log(this.state.map);\n      let allposibilities = closerLook(this.state.map);\n      console.log(allposibilities);\n    };\n\n    this.clearPuzzle = () => {\n      let clear = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n      this.setState({\n        map: clear\n      });\n    };\n\n    this.solve = () => {\n      let newMap = this.state.map.slice();\n      let change = !this.isfinished(newMap);\n      let waschanged = false; //variable change will allow at least 10 cycles to execute and beyond if cells continue to be changed\n      //double for-loop iterates through matrix checking for empty spaces\n\n      for (let i = 0; i < 9; i++) {\n        for (let j = 0; j < 9; j++) {\n          if (newMap[i][j] === 0) {\n            //if cell is empty, put correct answer in\n            let possible = oneRule(newMap, i, j); //set possible to the total possible number that could fit in this cell\n\n            if (possible.length === 1) {\n              // if there is only one possibiliyt set it\n              waschanged = true;\n              newMap[i][j] = possible[0];\n              console.log(\"One Rule Found at \" + i + \" \" + j + \" to be \" + possible[0]);\n            } else if (possible.length === 0) {\n              //any empty cell should always have some list of possible numbers\n              alert(\"Unsolvable\");\n              return;\n            } else if (possible.length > 1) {\n              let temp = deduction(newMap, i, j, possible);\n\n              if (temp !== 0) {\n                waschanged = true;\n                console.log(\"Deduction Found at \" + i + \" \" + j + \" to be \" + temp);\n                newMap[i][j] = temp;\n              }\n            } else {\n              if (this.state.cycleCount < 11) {\n                waschanged = true;\n              }\n\n              continue;\n            }\n          }\n        }\n      }\n\n      this.setState({\n        map: newMap\n      });\n      change = !this.isfinished(newMap);\n\n      if (waschanged === true && change === true) {\n        this.setState({\n          cycleCount: 0\n        }); //this.state.cycleCount = 0;\n\n        this.solve();\n      } else if (change === true && this.state.cycleCount < 3 && waschanged === false) {\n        this.state.cycleCount += 1;\n        console.log(\"cycleCount increased = \" + this.state.cycleCount);\n        this.solve();\n      } else if (change === true && waschanged === false && this.state.cycleCount < 10) {\n        this.state.cycleCount += 1;\n        console.log(\"Initiating closer look\");\n        let allpossibilities = closerLook(newMap); //console.log(allpossibilities);\n\n        allpossibilities = reducePossibilities(allpossibilities, newMap);\n        console.log(allpossibilities);\n        this.solve(); //this.setState({map: newMap});\n        //return;\n      } else if (change === false) {\n        console.log(\"Solved \");\n        return;\n      }\n    };\n\n    this.state = {\n      map: [[1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], //top 3 blocks ([0][0-8] thru [2][0-8])\n      [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], //middle 3 blocks ([3][0-8] thru [5][0-8])\n      [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1]],\n      //bottom 3 blocks ([6][0-8] thru [8][0-8])\n      cycleCount: 0\n    };\n  } //end constructor\n\n\n  //<input onChange = {this.handleInput} placeholder=\"Enter Number\"></input>\n  //<button onClick={this.logValue}>Log value</button>\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, \"Sudoku Solver\")), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][0],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][1],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][2],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][3],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][4],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][5],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][6],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][7],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][8],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][0],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][1],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][2],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][3],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][4],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][5],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][6],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][7],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][8],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][0],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][1],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][2],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][3],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][4],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][5],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][6],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][7],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][8],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][0],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][1],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][2],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][3],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][4],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][5],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][6],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][7],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][8],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][0],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][1],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][2],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][3],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][4],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][5],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][6],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][7],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][8],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][0],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][1],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][2],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][3],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][4],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][5],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][6],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][7],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][8],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][0],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][1],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][2],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][3],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][4],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][5],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][6],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][7],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][8],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][0],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][1],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][2],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][3],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][4],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][5],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][6],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][7],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][8],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][0],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][1],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][2],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][3],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][4],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][5],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][6],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][7],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][8],\n      id: \"myInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 22\n      }\n    }), \" \"))), /*#__PURE__*/React.createElement(\"th\", {\n      colSpan: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.solve,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, \" Solve \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clearPuzzle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }, \" Erase Board \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 81\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.printMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }\n    }, \" Print to Console \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 83\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.resetTest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }\n    }, \" Reset Test \"))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Steven/Desktop/Workspace/SudokuSolver/src/Tabs/home.js"],"names":["React","Component","ReactDOM","Home","constructor","props","resetTest","test","setState","cycleCount","map","handleInput","event","index1","index2","isNaN","target","value","alert","newMap","state","slice","Number","printMap","isfinished","answer","i","j","console","log","allposibilities","closerLook","clearPuzzle","clear","solve","change","waschanged","possible","oneRule","length","temp","deduction","allpossibilities","reducePossibilities","render","ev"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport '../App.css';\r\nimport './utility';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            map :   [[1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],//top 3 blocks ([0][0-8] thru [2][0-8])\r\n                     \r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],//middle 3 blocks ([3][0-8] thru [5][0-8])\r\n\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1]],//bottom 3 blocks ([6][0-8] thru [8][0-8])\r\n\r\n            cycleCount: 0\r\n        };\r\n    } //end constructor\r\n\r\n    resetTest = () => {\r\n\r\n        let test = [[3,5,9,    8,0,0,   0,0,0],\r\n                    [0,0,0,    0,4,0,   0,0,0],\r\n                    [0,0,0,    0,0,0,   0,7,9],\r\n        \r\n                    [0,6,0,    4,0,0,   0,0,0],\r\n                    [0,0,0,    0,0,0,   0,0,8],\r\n                    [0,3,0,    2,6,0,   0,0,0],\r\n\r\n                    [0,0,8,    3,0,9,   2,0,7],\r\n                    [0,0,0,    0,0,8,   5,0,0],\r\n                    [0,0,1,    0,0,0,   6,0,0]];/*\r\n\r\n        let test = [[0,9,0,    4,7,0,   0,0,0],\r\n                    [0,0,3,    0,5,0,   0,0,7],\r\n                    [0,5,1,    0,0,6,   0,0,0],\r\n        \r\n                    [0,0,0,    9,8,3,   0,0,0],\r\n                    [0,0,0,    0,0,0,   0,2,6],\r\n                    [3,0,0,    0,0,0,   0,7,0],\r\n\r\n                    [0,0,6,    0,0,0,   0,0,0],\r\n                    [0,4,0,    0,0,5,   9,0,0],\r\n                    [0,0,0,    3,0,1,   5,0,0]];\r\n        \r\n        let test = [[1,0,0,    0,0,7,   0,9,0],\r\n                    [0,3,0,    0,2,0,   0,0,8],\r\n                    [0,0,9,    6,0,0,   5,0,0],\r\n        \r\n                    [0,0,5,    3,0,0,   9,0,0],\r\n                    [0,1,0,    0,8,0,   0,0,2],\r\n                    [6,0,0,    0,0,4,   0,0,0],\r\n\r\n                    [3,0,0,    0,0,0,   0,1,0],\r\n                    [0,4,0,    0,0,0,   0,0,7],\r\n                    [0,0,7,    0,0,0,   3,0,0]];*/\r\n\r\n        this.setState({cycleCount : 0});\r\n        this.setState({map: test});\r\n    } //end of resetTest\r\n\r\n    handleInput = (event, index1, index2) =>{\r\n       \r\n        if(isNaN(event.target.value)){\r\n            alert(\"Sudoku only uses numbers\");\r\n        }\r\n        else{\r\n\r\n            let newMap = this.state.map.slice();\r\n            newMap[index1][index2] = Number(event.target.value);\r\n            this.setState({ map: newMap});\r\n            \r\n            this.printMap();  \r\n        }      \r\n    }// end of handleInput\r\n\r\n    isfinished = (newMap) => {  //returns true if puzzle is finished, else false... ie checks for any values of 0 in grid\r\n        let answer = true;\r\n        for(let i = 0; i < 9; i++){\r\n            for(let j = 0; j < 9; j++){\r\n                if(newMap[i][j] === 0){\r\n                    answer = false;\r\n                }\r\n                else{\r\n                    continue;\r\n                }\r\n            }// end for w/ j\r\n        }//end for w/ i\r\n        return answer;\r\n    }// end of isFinished\r\n\r\n    printMap = () => {  //prints the current state and the possible answers if any cells are unfilled\r\n        console.log(this.state.map);\r\n        let allposibilities = closerLook(this.state.map);\r\n        console.log(allposibilities);\r\n    }//end of printMap\r\n\r\n    clearPuzzle = () => {\r\n        let clear = [[0,0,0,    0,0,0,   0,0,0],\r\n                    [0,0,0,    0,0,0,   0,0,0],\r\n                    [0,0,0,    0,0,0,   0,0,0],\r\n        \r\n                    [0,0,0,    0,0,0,   0,0,0],\r\n                    [0,0,0,    0,0,0,   0,0,0],\r\n                    [0,0,0,    0,0,0,   0,0,0],\r\n\r\n                    [0,0,0,    0,0,0,   0,0,0],\r\n                    [0,0,0,    0,0,0,   0,0,0],\r\n                    [0,0,0,    0,0,0,   0,0,0]];\r\n        \r\n        this.setState({ map: clear});\r\n    }\r\n \r\n\r\n    solve = () => {       \r\n        let newMap = this.state.map.slice();\r\n        let change = !this.isfinished(newMap);\r\n        let waschanged = false;  //variable change will allow at least 10 cycles to execute and beyond if cells continue to be changed\r\n        //double for-loop iterates through matrix checking for empty spaces\r\n\r\n            for(let i = 0; i < 9; i++){\r\n                for(let j = 0; j < 9; j++){\r\n                    if(newMap[i][j] === 0){      //if cell is empty, put correct answer in\r\n                        \r\n                        let possible = oneRule(newMap, i, j); //set possible to the total possible number that could fit in this cell\r\n                        if (possible.length === 1){ // if there is only one possibiliyt set it\r\n                            waschanged = true;\r\n                            newMap[i][j] = possible[0];\r\n                            console.log(\"One Rule Found at \" + i + \" \" + j + \" to be \" + possible[0]);\r\n                        }\r\n                        else if (possible.length === 0){ //any empty cell should always have some list of possible numbers\r\n                            alert(\"Unsolvable\");\r\n                            return;\r\n                        }\r\n                        else if (possible.length > 1){\r\n                            let temp = deduction(newMap, i, j, possible);\r\n                            if(temp !== 0){\r\n                                waschanged = true;                               \r\n                                console.log(\"Deduction Found at \" + i + \" \" + j + \" to be \" + temp);\r\n                                newMap[i][j] = temp;\r\n                            }                    \r\n                            \r\n                        }\r\n                        else{\r\n                            if(this.state.cycleCount < 11){\r\n                                waschanged = true;\r\n                            }\r\n                            continue;\r\n                        }\r\n                            \r\n                    }\r\n                }\r\n            }\r\n        \r\n\r\n        this.setState({map : newMap});\r\n        change = !this.isfinished(newMap);\r\n        if(waschanged === true && change === true ){\r\n            this.setState({cycleCount: 0});\r\n            //this.state.cycleCount = 0;\r\n            this.solve();\r\n        }\r\n        else if (change === true && this.state.cycleCount < 3 && waschanged === false){\r\n            this.state.cycleCount += 1;\r\n            console.log(\"cycleCount increased = \" + this.state.cycleCount);\r\n            this.solve();\r\n        }\r\n        else if (change === true && waschanged === false && this.state.cycleCount < 10){\r\n            this.state.cycleCount += 1;\r\n            console.log(\"Initiating closer look\");\r\n            let allpossibilities = closerLook(newMap);\r\n            //console.log(allpossibilities);\r\n            allpossibilities = reducePossibilities(allpossibilities, newMap);\r\n            console.log(allpossibilities);\r\n            this.solve();\r\n            //this.setState({map: newMap});\r\n            //return;\r\n        }\r\n        else if (change === false){\r\n            console.log(\"Solved \");\r\n            return;\r\n        }\r\n    }\r\n\r\n    \r\n    //<input onChange = {this.handleInput} placeholder=\"Enter Number\"></input>\r\n    //<button onClick={this.logValue}>Log value</button>\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div id=\"title\">\r\n                    <div className = \"head\">\r\n                        Sudoku Solver\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 0)} maxLength = \"1\" placeholder = {this.state.map[0][0]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 1)} maxLength = \"1\" placeholder = {this.state.map[0][1]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 2)} maxLength = \"1\" placeholder = {this.state.map[0][2]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 3)} maxLength = \"1\" placeholder = {this.state.map[0][3]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 4)} maxLength = \"1\" placeholder = {this.state.map[0][4]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 5)} maxLength = \"1\" placeholder = {this.state.map[0][5]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 6)} maxLength = \"1\" placeholder = {this.state.map[0][6]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 7)} maxLength = \"1\" placeholder = {this.state.map[0][7]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 8)} maxLength = \"1\" placeholder = {this.state.map[0][8]} id=\"myInput\"/> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 0)} maxLength = \"1\" placeholder = {this.state.map[1][0]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 1)} maxLength = \"1\" placeholder = {this.state.map[1][1]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 2)} maxLength = \"1\" placeholder = {this.state.map[1][2]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 3)} maxLength = \"1\" placeholder = {this.state.map[1][3]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 4)} maxLength = \"1\" placeholder = {this.state.map[1][4]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 5)} maxLength = \"1\" placeholder = {this.state.map[1][5]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 6)} maxLength = \"1\" placeholder = {this.state.map[1][6]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 7)} maxLength = \"1\" placeholder = {this.state.map[1][7]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 8)} maxLength = \"1\" placeholder = {this.state.map[1][8]} id=\"myInput\"/> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 0)} maxLength = \"1\" placeholder = {this.state.map[2][0]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 1)} maxLength = \"1\" placeholder = {this.state.map[2][1]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 2)} maxLength = \"1\" placeholder = {this.state.map[2][2]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 3)} maxLength = \"1\" placeholder = {this.state.map[2][3]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 4)} maxLength = \"1\" placeholder = {this.state.map[2][4]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 5)} maxLength = \"1\" placeholder = {this.state.map[2][5]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 6)} maxLength = \"1\" placeholder = {this.state.map[2][6]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 7)} maxLength = \"1\" placeholder = {this.state.map[2][7]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 8)} maxLength = \"1\" placeholder = {this.state.map[2][8]} id=\"myInput\"/> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 0)} maxLength = \"1\" placeholder = {this.state.map[3][0]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 1)} maxLength = \"1\" placeholder = {this.state.map[3][1]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 2)} maxLength = \"1\" placeholder = {this.state.map[3][2]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 3)} maxLength = \"1\" placeholder = {this.state.map[3][3]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 4)} maxLength = \"1\" placeholder = {this.state.map[3][4]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 5)} maxLength = \"1\" placeholder = {this.state.map[3][5]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 6)} maxLength = \"1\" placeholder = {this.state.map[3][6]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 7)} maxLength = \"1\" placeholder = {this.state.map[3][7]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 8)} maxLength = \"1\" placeholder = {this.state.map[3][8]} id=\"myInput\"/> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 0)} maxLength = \"1\" placeholder = {this.state.map[4][0]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 1)} maxLength = \"1\" placeholder = {this.state.map[4][1]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 2)} maxLength = \"1\" placeholder = {this.state.map[4][2]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 3)} maxLength = \"1\" placeholder = {this.state.map[4][3]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 4)} maxLength = \"1\" placeholder = {this.state.map[4][4]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 5)} maxLength = \"1\" placeholder = {this.state.map[4][5]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 6)} maxLength = \"1\" placeholder = {this.state.map[4][6]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 7)} maxLength = \"1\" placeholder = {this.state.map[4][7]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 8)} maxLength = \"1\" placeholder = {this.state.map[4][8]} id=\"myInput\"/> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 0)} maxLength = \"1\" placeholder = {this.state.map[5][0]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 1)} maxLength = \"1\" placeholder = {this.state.map[5][1]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 2)} maxLength = \"1\" placeholder = {this.state.map[5][2]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 3)} maxLength = \"1\" placeholder = {this.state.map[5][3]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 4)} maxLength = \"1\" placeholder = {this.state.map[5][4]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 5)} maxLength = \"1\" placeholder = {this.state.map[5][5]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 6)} maxLength = \"1\" placeholder = {this.state.map[5][6]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 7)} maxLength = \"1\" placeholder = {this.state.map[5][7]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 8)} maxLength = \"1\" placeholder = {this.state.map[5][8]} id=\"myInput\"/> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 0)} maxLength = \"1\" placeholder = {this.state.map[6][0]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 1)} maxLength = \"1\" placeholder = {this.state.map[6][1]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 2)} maxLength = \"1\" placeholder = {this.state.map[6][2]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 3)} maxLength = \"1\" placeholder = {this.state.map[6][3]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 4)} maxLength = \"1\" placeholder = {this.state.map[6][4]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 5)} maxLength = \"1\" placeholder = {this.state.map[6][5]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 6)} maxLength = \"1\" placeholder = {this.state.map[6][6]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 7)} maxLength = \"1\" placeholder = {this.state.map[6][7]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 8)} maxLength = \"1\" placeholder = {this.state.map[6][8]} id=\"myInput\"/> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 0)} maxLength = \"1\" placeholder = {this.state.map[7][0]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 1)} maxLength = \"1\" placeholder = {this.state.map[7][1]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 2)} maxLength = \"1\" placeholder = {this.state.map[7][2]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 3)} maxLength = \"1\" placeholder = {this.state.map[7][3]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 4)} maxLength = \"1\" placeholder = {this.state.map[7][4]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 5)} maxLength = \"1\" placeholder = {this.state.map[7][5]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 6)} maxLength = \"1\" placeholder = {this.state.map[7][6]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 7)} maxLength = \"1\" placeholder = {this.state.map[7][7]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 8)} maxLength = \"1\" placeholder = {this.state.map[7][8]} id=\"myInput\"/> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 0)} maxLength = \"1\" placeholder = {this.state.map[8][0]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 1)} maxLength = \"1\" placeholder = {this.state.map[8][1]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 2)} maxLength = \"1\" placeholder = {this.state.map[8][2]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 3)} maxLength = \"1\" placeholder = {this.state.map[8][3]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 4)} maxLength = \"1\" placeholder = {this.state.map[8][4]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 5)} maxLength = \"1\" placeholder = {this.state.map[8][5]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 6)} maxLength = \"1\" placeholder = {this.state.map[8][6]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 7)} maxLength = \"1\" placeholder = {this.state.map[8][7]} id=\"myInput\"/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 8)} maxLength = \"1\" placeholder = {this.state.map[8][8]} id=\"myInput\"/> </td>\r\n                </tr>\r\n               \r\n            </tbody>\r\n\r\n            <th colSpan=\"9\">\r\n                    <button onClick = {this.solve}> Solve </button> <br/>\r\n                    <button onClick = {this.clearPuzzle}> Erase Board </button> <br/> \r\n                    <button onClick = {this.printMap}> Print to Console </button> <br/>\r\n                    <button onClick = {this.resetTest} > Reset Test </button>\r\n                </th>\r\n                \r\n            </table>\r\n            \r\n            </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}