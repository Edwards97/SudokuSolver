{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven\\\\Desktop\\\\Workplace\\\\sudoku\\\\sudoku\\\\src\\\\Tabs\\\\home.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport '../App.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetTest = () => {\n      let test = [[3, 5, 9, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 7, 9], [0, 6, 0, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 8], [0, 3, 0, 2, 6, 0, 0, 0, 0], [0, 0, 8, 3, 0, 9, 2, 0, 7], [0, 0, 0, 0, 0, 8, 5, 0, 0], [0, 0, 1, 0, 0, 0, 6, 0, 0]];\n      this.state.cycleCount = 0;\n      let newMap = test;\n      this.setState({\n        map: newMap\n      }); //        this.setState({newMap: this.state.test});\n\n      console.log(newMap);\n    };\n\n    this.handleInput = (event, index1, index2) => {\n      if (isNaN(event.target.value)) {\n        alert(\"Sudoku only uses numbers\");\n      } else {\n        let newMap = this.state.map.slice();\n        newMap[index1][index2] = Number(event.target.value);\n        this.setState({\n          map: newMap\n        });\n        this.printMap();\n      }\n    };\n\n    this.printMap = () => {\n      console.log(this.state.map);\n    };\n\n    this.oneRule = (newMap, i, j) => {\n      let possible = [];\n\n      for (let solution = 1; solution != 10; solution++) {\n        //            console.log(\"possible array contains \" + possible);\n        let column = 0;\n        let row = 0;\n        let isProper = true;\n\n        while (column != 9) {\n          //check if current column contains number already\n          if (newMap[i][column] == solution) {\n            isProper = false;\n            break;\n          } else if (isProper == false) {\n            break;\n          }\n\n          column++;\n        }\n\n        while (row != 9) {\n          if (newMap[row][j] == solution) {\n            isProper = false;\n            break;\n          } else if (isProper == false) {\n            break;\n          }\n\n          row++;\n        }\n\n        let x = Math.trunc(i / 3) * 3;\n\n        for (let counter1 = x; counter1 != x + 3; counter1++) {\n          let y = Math.trunc(j / 3) * 3;\n\n          for (let counter2 = y; counter2 != y + 3; counter2++) {\n            if (newMap[counter1][counter2] == solution) {\n              isProper = false;\n              break;\n            }\n          }\n\n          if (isProper == false) {\n            break;\n          }\n        } //                          <TODO> Check 3x3 block here\n\n\n        if (isProper != false) {\n          possible.push(solution);\n        }\n      }\n\n      return possible;\n    };\n\n    this.deduction = (newMap, i, j, possible) => {\n      let oldarray = [];\n      let deducible = [];\n\n      if (i == 7 && j == 2) {\n        //testing purposes\n        let x = Math.trunc(i / 3) * 3;\n\n        for (let counter1 = x; counter1 != x + 3; counter1++) {\n          let y = Math.trunc(j / 3) * 3;\n\n          for (let counter2 = y; counter2 != y + 3; counter2++) {\n            if (newMap[counter1][counter2] != 0) {\n              continue;\n            } else if (counter1 == i && counter2 == j) {\n              continue;\n            } else {\n              let newarray = this.oneRule(newMap, counter1, counter2);\n              oldarray = newarray.concat(oldarray); //                        console.log(\"Total possibilities found = \" + oldarray);\n            }\n          }\n        }\n\n        for (let value1 = 0; value1 < possible.length; value1++) {\n          for (let value2 = 0; value2 < oldarray.length; value2++) {\n            if (possible[value1] == oldarray[value2]) {\n              console.log(possible[value1] + \" equals \" + oldarray[value2]);\n              break;\n            }\n\n            if (possible[value1] != oldarray[value2]) {\n              console.log(\"Is this your card \" + possible[value1]); //                    return possible[value1];\n            }\n          }\n        }\n      }\n\n      return 0; //placeholder\n    };\n\n    this.solve = () => {\n      // No easy way to check if sudoku is solvable before attempting\n      let newMap = this.state.map.slice();\n      let change = true; //variable change will allow at least 10 cycles to execute and beyond if cells continue to be changed\n      //double for-loop iterates through matrix checking for empty spaces\n\n      if (change == true) {\n        change = false;\n\n        for (let i = 0; i < 9; i++) {\n          for (let j = 0; j < 9; j++) {\n            if (newMap[i][j] == 0) {\n              //if cell is empty, put correct answer in\n              let possible = this.oneRule(newMap, i, j); //set possible to the total possible number that could fit in this cell\n\n              if (possible.length == 1) {\n                // if there is only one possibiliyt set it\n                change = true;\n                newMap[i][j] = possible[0];\n                console.log(\"One Rule Found at \" + i + \" \" + j + \" to be \" + possible[0]);\n              } else if (possible.length == 0) {\n                //any empty cell should always have some list of possible numbers\n                alert(\"Unsolvable\");\n                return;\n              } else if (possible.length > 1) {\n                let temp = this.deduction(newMap, i, j, possible);\n                /*                           if (temp == 0){\r\n                                               continue;\r\n                                           }\r\n                                           else{*/\n\n                change = true; //                                console.log(\"Deduction Found at \" + i + \" \" + j + \" could be \" + possible);\n                //                                newMap[i][j] = temp;\n                //                            }\n                //                        newMap[i][j] = this.deduction(newMap, i, j, possible);\n                //                        console.log(\"Deduction Found at \" + i + \" \" + j + \" to be \" + newMap[i][j]);\n                //                       console.log(\"Deduction Found at \" + i + \" \" + j + \" to be \" + newMap[i][j]);\n              } else {\n                if (this.state.cycleCount < 11) {\n                  change = true;\n                }\n\n                continue;\n              }\n            }\n          }\n        }\n      }\n\n      this.setState({\n        map: newMap\n      });\n\n      if (change == true && this.state.cycleCount < 11) {\n        this.state.cycleCount += 1;\n        this.solve();\n      } else if (change == true && this.state.cycleCount >= 11) {\n        //this.setState({map: newMap});\n        console.log(\"Returned early and cycleCount = \" + this.state.cycleCount);\n        return;\n      } else if (change == false) {\n        console.log(\"Solved at cycleCount = \" + this.state.cycleCount);\n      }\n    };\n\n    this.state = {\n      map: [[1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], //top 3 blocks ([0][0-8] thru [2][0-8])\n      [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], //middle 3 blocks ([3][0-8] thru [5][0-8])\n      [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1]],\n      //bottom 3 blocks ([6][0-8] thru [8][0-8])\n      cycleCount: 0\n    };\n  }\n\n  //<input onChange = {this.handleInput} placeholder=\"Enter Number\"></input>\n  //<button onClick={this.logValue}>Log value</button>\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, \"Sudoku Solver\")), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][6],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][7],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[0][8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][6],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][7],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[1][8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][6],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][7],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[2][8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][6],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][7],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[3][8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][6],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][7],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[4][8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][6],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][7],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[5][8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][6],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][7],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[6][8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][6],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][7],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[7][8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 0),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 1),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 2),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 3),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 4),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 5),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 6),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][6],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 7),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][7],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 8),\n      maxLength: \"1\",\n      placeholder: this.state.map[8][8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"th\", {\n      colSpan: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.solve,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }\n    }, \" Solve \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 74\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.printMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }\n    }, \" Print to Console \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 83\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.resetTest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 21\n      }\n    }, \" Reset Test \"))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Steven/Desktop/Workplace/sudoku/sudoku/src/Tabs/home.js"],"names":["React","Component","ReactDOM","Home","constructor","props","resetTest","test","state","cycleCount","newMap","setState","map","console","log","handleInput","event","index1","index2","isNaN","target","value","alert","slice","Number","printMap","oneRule","i","j","possible","solution","column","row","isProper","x","Math","trunc","counter1","y","counter2","push","deduction","oldarray","deducible","newarray","concat","value1","length","value2","solve","change","temp","render","ev"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport '../App.css';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            map :   [[1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],//top 3 blocks ([0][0-8] thru [2][0-8])\r\n                     \r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],//middle 3 blocks ([3][0-8] thru [5][0-8])\r\n\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1]],//bottom 3 blocks ([6][0-8] thru [8][0-8])\r\n\r\n            cycleCount: 0\r\n        };\r\n    }\r\n\r\n    resetTest = () => {\r\n\r\n        let test = [[3,5,9,    8,0,0,   0,0,0],\r\n                    [0,0,0,    0,4,0,   0,0,0],\r\n                    [0,0,0,    0,0,0,   0,7,9],\r\n        \r\n                    [0,6,0,    4,0,0,   0,0,0],\r\n                    [0,0,0,    0,0,0,   0,0,8],\r\n                    [0,3,0,    2,6,0,   0,0,0],\r\n\r\n                    [0,0,8,    3,0,9,   2,0,7],\r\n                    [0,0,0,    0,0,8,   5,0,0],\r\n                    [0,0,1,    0,0,0,   6,0,0]];\r\n\r\n        this.state.cycleCount = 0;\r\n        let newMap = test;\r\n        this.setState({map: newMap});\r\n//        this.setState({newMap: this.state.test});\r\n        console.log(newMap);\r\n    }\r\n\r\n    handleInput = (event, index1, index2) =>{\r\n       \r\n        if(isNaN(event.target.value)){\r\n            alert(\"Sudoku only uses numbers\");\r\n        }\r\n        else{\r\n\r\n            let newMap = this.state.map.slice();\r\n            newMap[index1][index2] = Number(event.target.value);\r\n            this.setState({ map: newMap});\r\n            \r\n            this.printMap();  \r\n        }      \r\n    }\r\n\r\n\r\n    printMap = () => {\r\n        console.log(this.state.map);\r\n    }\r\n\r\n\r\n    //given a grid, and a set of coords returns a guaranteed answer or leaves space blank\r\n    //oneRule checks vertical, horizontal and 3x3 and holds an array of possibilites based on what it finds...\r\n    //if there is only possibilty it pushes that answer into the cell\r\n    oneRule = (newMap, i, j) => {    \r\n        let possible = [];\r\n        for(let solution = 1; solution != 10; solution++){\r\n//            console.log(\"possible array contains \" + possible);\r\n            let column = 0;\r\n            let row = 0;\r\n            let isProper = true;\r\n            \r\n\r\n            while (column != 9){               //check if current column contains number already\r\n                if (newMap[i][column] == solution){\r\n                    isProper = false;\r\n                    break;\r\n                }\r\n                else if (isProper == false){\r\n                    break;\r\n                }\r\n                column++;\r\n            }   \r\n\r\n            while (row != 9){\r\n                if(newMap[row][j] == solution){\r\n                    isProper = false;\r\n                    break;\r\n                }\r\n                else if(isProper == false){\r\n                    break;\r\n                }\r\n                row++;\r\n            }\r\n                \r\n            let x = (Math.trunc(i/3))*3;\r\n            for (let counter1 = x; counter1 != x+3; counter1++){\r\n                let y = (Math.trunc(j/3))*3;\r\n                for(let counter2 = y; counter2 != y+3; counter2++){\r\n                    if (newMap[counter1][counter2] == solution){\r\n                        isProper = false; \r\n                        break;\r\n                    }\r\n                }\r\n                if (isProper == false){\r\n                    break;\r\n                }\r\n            }\r\n//                          <TODO> Check 3x3 block here\r\n                \r\n            \r\n            if(isProper != false){\r\n                possible.push(solution);\r\n            }\r\n          \r\n        }        \r\n            return possible;       \r\n        \r\n    }\r\n\r\n    //scan other empty cells in 3x3 to determine if current cell is the only possible fit for a number\r\n    deduction = (newMap, i, j, possible) => {\r\n        let oldarray = [];\r\n        let deducible = [];\r\n        if(i == 7 && j == 2){   //testing purposes\r\n        let x = (Math.trunc(i/3))*3;\r\n            for (let counter1 = x; counter1 != x+3; counter1++){\r\n                let y = (Math.trunc(j/3))*3;\r\n                for(let counter2 = y; counter2 != y+3; counter2++){\r\n                   \r\n                    if (newMap[counter1][counter2] != 0){\r\n                        continue;\r\n                    }\r\n                    else if(counter1 == i && counter2 == j){\r\n                        continue;\r\n                    }\r\n                    else {               \r\n                        let newarray = this.oneRule(newMap, counter1, counter2);\r\n                        oldarray = newarray.concat(oldarray);\r\n//                        console.log(\"Total possibilities found = \" + oldarray);\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        for(let value1 = 0; value1 < possible.length; value1++){\r\n            for(let value2 = 0; value2 < oldarray.length; value2++){\r\n                if(possible[value1] == oldarray[value2]){\r\n                    console.log(possible[value1] + \" equals \" + oldarray[value2]);\r\n                    break;\r\n                }\r\n                if(possible[value1] != oldarray[value2]){\r\n                    console.log(\"Is this your card \" + possible[value1]);\r\n//                    return possible[value1];\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        }\r\n        return 0; //placeholder\r\n    }\r\n\r\n    solve = () => {\r\n        // No easy way to check if sudoku is solvable before attempting\r\n        \r\n        let newMap = this.state.map.slice();\r\n        let change = true;  //variable change will allow at least 10 cycles to execute and beyond if cells continue to be changed\r\n        //double for-loop iterates through matrix checking for empty spaces\r\n        if(change == true){\r\n            change = false;\r\n            for(let i = 0; i < 9; i++){\r\n                for(let j = 0; j < 9; j++){\r\n                    if(newMap[i][j] == 0){      //if cell is empty, put correct answer in\r\n                        \r\n                        let possible = this.oneRule(newMap, i, j); //set possible to the total possible number that could fit in this cell\r\n                        if (possible.length == 1){ // if there is only one possibiliyt set it\r\n                            change = true;\r\n                            newMap[i][j] = possible[0];\r\n                            console.log(\"One Rule Found at \" + i + \" \" + j + \" to be \" + possible[0]);\r\n                        }\r\n                        else if (possible.length == 0){ //any empty cell should always have some list of possible numbers\r\n                            alert(\"Unsolvable\");\r\n                            return;\r\n                        }\r\n                        else if (possible.length > 1){\r\n                            let temp = this.deduction(newMap, i, j, possible);\r\n /*                           if (temp == 0){\r\n                                continue;\r\n                            }\r\n                            else{*/\r\n                                change = true;\r\n//                                console.log(\"Deduction Found at \" + i + \" \" + j + \" could be \" + possible);\r\n//                                newMap[i][j] = temp;\r\n//                            }\r\n    //                        newMap[i][j] = this.deduction(newMap, i, j, possible);\r\n    //                        console.log(\"Deduction Found at \" + i + \" \" + j + \" to be \" + newMap[i][j]);\r\n    //                       console.log(\"Deduction Found at \" + i + \" \" + j + \" to be \" + newMap[i][j]);\r\n                            \r\n                        }\r\n                        else{\r\n                            if(this.state.cycleCount < 11){\r\n                                change = true;\r\n                            }\r\n                            continue;\r\n                        }\r\n                            \r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({map : newMap});\r\n        if(change == true && this.state.cycleCount < 11){\r\n            this.state.cycleCount += 1;\r\n            this.solve();\r\n        }\r\n        else if (change == true && this.state.cycleCount >= 11){\r\n            //this.setState({map: newMap});\r\n            console.log(\"Returned early and cycleCount = \" + this.state.cycleCount);\r\n            return;\r\n        }\r\n        else if(change == false){\r\n            console.log(\"Solved at cycleCount = \" + this.state.cycleCount);\r\n        }\r\n    }\r\n\r\n    \r\n    //<input onChange = {this.handleInput} placeholder=\"Enter Number\"></input>\r\n    //<button onClick={this.logValue}>Log value</button>\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div id=\"title\">\r\n                    <div className = \"head\">\r\n                        Sudoku Solver\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n\r\n            <table>\r\n            \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 0)} maxLength = \"1\" placeholder = {this.state.map[0][0]} /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 1)} maxLength = \"1\" placeholder = {this.state.map[0][1]} /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 2)} maxLength = \"1\" placeholder = {this.state.map[0][2]} /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 3)} maxLength = \"1\" placeholder = {this.state.map[0][3]} /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 4)} maxLength = \"1\" placeholder = {this.state.map[0][4]} /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 5)} maxLength = \"1\" placeholder = {this.state.map[0][5]} /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 6)} maxLength = \"1\" placeholder = {this.state.map[0][6]} /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 7)} maxLength = \"1\" placeholder = {this.state.map[0][7]} /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 8)} maxLength = \"1\" placeholder = {this.state.map[0][8]} /> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 0)} maxLength = \"1\" placeholder = {this.state.map[1][0]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 1)} maxLength = \"1\" placeholder = {this.state.map[1][1]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 2)} maxLength = \"1\" placeholder = {this.state.map[1][2]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 3)} maxLength = \"1\" placeholder = {this.state.map[1][3]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 4)} maxLength = \"1\" placeholder = {this.state.map[1][4]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 5)} maxLength = \"1\" placeholder = {this.state.map[1][5]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 6)} maxLength = \"1\" placeholder = {this.state.map[1][6]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 7)} maxLength = \"1\" placeholder = {this.state.map[1][7]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 8)} maxLength = \"1\" placeholder = {this.state.map[1][8]}/> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 0)} maxLength = \"1\" placeholder = {this.state.map[2][0]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 1)} maxLength = \"1\" placeholder = {this.state.map[2][1]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 2)} maxLength = \"1\" placeholder = {this.state.map[2][2]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 3)} maxLength = \"1\" placeholder = {this.state.map[2][3]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 4)} maxLength = \"1\" placeholder = {this.state.map[2][4]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 5)} maxLength = \"1\" placeholder = {this.state.map[2][5]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 6)} maxLength = \"1\" placeholder = {this.state.map[2][6]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 7)} maxLength = \"1\" placeholder = {this.state.map[2][7]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 8)} maxLength = \"1\" placeholder = {this.state.map[2][8]}/> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 0)} maxLength = \"1\" placeholder = {this.state.map[3][0]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 1)} maxLength = \"1\" placeholder = {this.state.map[3][1]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 2)} maxLength = \"1\" placeholder = {this.state.map[3][2]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 3)} maxLength = \"1\" placeholder = {this.state.map[3][3]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 4)} maxLength = \"1\" placeholder = {this.state.map[3][4]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 5)} maxLength = \"1\" placeholder = {this.state.map[3][5]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 6)} maxLength = \"1\" placeholder = {this.state.map[3][6]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 7)} maxLength = \"1\" placeholder = {this.state.map[3][7]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 8)} maxLength = \"1\" placeholder = {this.state.map[3][8]}/> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 0)} maxLength = \"1\" placeholder = {this.state.map[4][0]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 1)} maxLength = \"1\" placeholder = {this.state.map[4][1]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 2)} maxLength = \"1\" placeholder = {this.state.map[4][2]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 3)} maxLength = \"1\" placeholder = {this.state.map[4][3]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 4)} maxLength = \"1\" placeholder = {this.state.map[4][4]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 5)} maxLength = \"1\" placeholder = {this.state.map[4][5]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 6)} maxLength = \"1\" placeholder = {this.state.map[4][6]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 7)} maxLength = \"1\" placeholder = {this.state.map[4][7]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 8)} maxLength = \"1\" placeholder = {this.state.map[4][8]}/> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 0)} maxLength = \"1\" placeholder = {this.state.map[5][0]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 1)} maxLength = \"1\" placeholder = {this.state.map[5][1]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 2)} maxLength = \"1\" placeholder = {this.state.map[5][2]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 3)} maxLength = \"1\" placeholder = {this.state.map[5][3]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 4)} maxLength = \"1\" placeholder = {this.state.map[5][4]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 5)} maxLength = \"1\" placeholder = {this.state.map[5][5]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 6)} maxLength = \"1\" placeholder = {this.state.map[5][6]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 7)} maxLength = \"1\" placeholder = {this.state.map[5][7]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 8)} maxLength = \"1\" placeholder = {this.state.map[5][8]}/> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 0)} maxLength = \"1\" placeholder = {this.state.map[6][0]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 1)} maxLength = \"1\" placeholder = {this.state.map[6][1]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 2)} maxLength = \"1\" placeholder = {this.state.map[6][2]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 3)} maxLength = \"1\" placeholder = {this.state.map[6][3]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 4)} maxLength = \"1\" placeholder = {this.state.map[6][4]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 5)} maxLength = \"1\" placeholder = {this.state.map[6][5]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 6)} maxLength = \"1\" placeholder = {this.state.map[6][6]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 7)} maxLength = \"1\" placeholder = {this.state.map[6][7]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 8)} maxLength = \"1\" placeholder = {this.state.map[6][8]}/> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 0)} maxLength = \"1\" placeholder = {this.state.map[7][0]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 1)} maxLength = \"1\" placeholder = {this.state.map[7][1]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 2)} maxLength = \"1\" placeholder = {this.state.map[7][2]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 3)} maxLength = \"1\" placeholder = {this.state.map[7][3]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 4)} maxLength = \"1\" placeholder = {this.state.map[7][4]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 5)} maxLength = \"1\" placeholder = {this.state.map[7][5]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 6)} maxLength = \"1\" placeholder = {this.state.map[7][6]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 7)} maxLength = \"1\" placeholder = {this.state.map[7][7]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 8)} maxLength = \"1\" placeholder = {this.state.map[7][8]}/> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 0)} maxLength = \"1\" placeholder = {this.state.map[8][0]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 1)} maxLength = \"1\" placeholder = {this.state.map[8][1]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 2)} maxLength = \"1\" placeholder = {this.state.map[8][2]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 3)} maxLength = \"1\" placeholder = {this.state.map[8][3]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 4)} maxLength = \"1\" placeholder = {this.state.map[8][4]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 5)} maxLength = \"1\" placeholder = {this.state.map[8][5]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 6)} maxLength = \"1\" placeholder = {this.state.map[8][6]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 7)} maxLength = \"1\" placeholder = {this.state.map[8][7]}/> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 8)} maxLength = \"1\" placeholder = {this.state.map[8][8]}/> </td>\r\n                </tr>\r\n                <th colSpan=\"9\">\r\n                    <button onClick = {this.solve}> Solve </button> <br/><br/>\r\n                    <button onClick = {this.printMap}> Print to Console </button> <br/>\r\n                    <button onClick = {this.resetTest}> Reset Test </button>\r\n                </th>\r\n                \r\n            </table>\r\n            \r\n            </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}