{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven\\\\Desktop\\\\Workplace\\\\sudoku\\\\sudoku\\\\src\\\\Tabs\\\\home.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport '../App.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = (event, index1, index2) => {\n      if (isNaN(event.target.value)) {\n        alert(\"Sudoku only uses numbers\");\n      } else {\n        let newMap = this.state.map.slice();\n        newMap[index1][index2] = Number(event.target.value);\n        this.setState({\n          map: newMap\n        });\n        this.printMap();\n      }\n    };\n\n    this.printMap = () => {\n      console.log(this.state.map);\n    };\n\n    this.oneRule = (newMap, i, j) => {\n      let answer = 0;\n      let possible = [];\n\n      for (let solution = 1; solution != 10; solution++) {\n        console.log(\"possible array contains \" + possible);\n        let column = 0;\n        let row = 0;\n        let blockCount = 0;\n        let isProper = true;\n\n        while (column != 9) {\n          //check if current column contains number already\n          if (newMap[i][column] == solution) {\n            isProper = false;\n            break;\n          } else if (isProper == false) {\n            break;\n          } else {\n            //added this\n            while (row != 9) {\n              if (newMap[row][j] == solution) {\n                isProper = false;\n                break;\n              } else {\n                row++;\n                console.log(\"row = \" + row + \" and j = \" + j);\n              }\n            } //possible.push(solution);\n\n\n            column++;\n            console.log(\"column = \" + column + \" and i = \" + i);\n          }\n        }\n\n        if (isProper == false) {\n          console.log(solution + \" didn't work\");\n        } else {\n          possible.push(solution);\n          console.log(possible + \" worked\");\n        }\n\n        if (possible.length == 1) {\n          answer = possible[0];\n        } else {\n          return 0;\n        }\n      }\n\n      return answer;\n    };\n\n    this.solve = () => {\n      // No easy way to check if sudoku is solvable before attempting\n      // attempting brute force (preserve \"rule of one digit per block/column/row\" and filling in empty spaces)\n      let newMap = this.state.map.slice();\n      newMap[0][1] = this.oneRule(newMap, 0, 1); //double for-loop iterates through matrix\n\n      /*      for(let i = 0; i < 9; i++){\r\n                  for(let j = 0; j < 9; j++){\r\n                      if(newMap[i][j] == 0){      //if cell is empty, put correct answer in\r\n                          \r\n                          //push attempt solution onto string of possible solutions, only setting solutions with 1 possibility\r\n                          newMap[i][j] = this.oneRule(newMap, i, j);*/\n      //          <TODO> Fix backtracking issue <TODO>                    \n      //       newMap[i][j] = this.oneRule(newMap, i, j);                            \n      //                }\n      //            }\n      //        }\n      //this.setState({map: newMap});\n\n      console.log(\"Solved\");\n      return;\n    };\n\n    this.state = {\n      map: [[1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], //top 3 blocks ([0][0-8] thru [2][0-8])\n      [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], //middle 3 blocks ([3][0-8] thru [5][0-8])\n      [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1]],\n      //bottom 3 blocks ([6][0-8] thru [8][0-8])\n      test: 0\n    };\n  }\n\n  //<input onChange = {this.handleInput} placeholder=\"Enter Number\"></input>\n  //<button onClick={this.logValue}>Log value</button>\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"Sudoku Solver\")), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 0),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 1),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 2),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 3),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 4),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 5),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 6),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 7),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 0, 8),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 0),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 1),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 2),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 3),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 4),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 5),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 6),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 7),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 1, 8),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 0),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 1),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 2),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 3),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 4),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 5),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 6),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 7),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 2, 8),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 0),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 1),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 2),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 3),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 4),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 5),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 6),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 7),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 3, 8),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 0),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 1),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 2),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 3),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 4),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 5),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 6),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 7),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 4, 8),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 0),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 1),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 2),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 3),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 4),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 5),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 6),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 7),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 5, 8),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 0),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 1),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 2),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 3),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 4),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 5),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 6),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 7),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 6, 8),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 0),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 1),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 2),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 3),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 4),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 5),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 6),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 7),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 7, 8),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 0),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 1),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 2),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 3),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 4),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 5),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 6),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 7),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 22\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onInput: ev => this.handleInput(ev, 8, 8),\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 22\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"th\", {\n      colSpan: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.solve,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, \" Solve \"))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Steven/Desktop/Workplace/sudoku/sudoku/src/Tabs/home.js"],"names":["React","Component","ReactDOM","Home","constructor","props","handleInput","event","index1","index2","isNaN","target","value","alert","newMap","state","map","slice","Number","setState","printMap","console","log","oneRule","i","j","answer","possible","solution","column","row","blockCount","isProper","push","length","solve","test","render","ev"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport '../App.css';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            map :   [[1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],//top 3 blocks ([0][0-8] thru [2][0-8])\r\n                     \r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],//middle 3 blocks ([3][0-8] thru [5][0-8])\r\n\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1],\r\n                     [1,1,1,    1,1,1,   1,1,1]],//bottom 3 blocks ([6][0-8] thru [8][0-8])\r\n            test: 0\r\n        };\r\n    }\r\n\r\n    handleInput = (event, index1, index2) =>{\r\n       \r\n        if(isNaN(event.target.value)){\r\n            alert(\"Sudoku only uses numbers\");\r\n        }\r\n        else{\r\n\r\n            let newMap = this.state.map.slice();\r\n            newMap[index1][index2] = Number(event.target.value);\r\n            this.setState({ map: newMap});\r\n            \r\n            this.printMap();  \r\n        }      \r\n    }\r\n\r\n\r\n    printMap = () => {\r\n        console.log(this.state.map);\r\n    }\r\n\r\n    oneRule = (newMap, i, j) => {\r\n        let answer = 0;\r\n        let possible = [];\r\n        for(let solution = 1; solution != 10; solution++){\r\n            console.log(\"possible array contains \" + possible);\r\n            let column = 0;\r\n            let row = 0;\r\n            let blockCount = 0;\r\n            let isProper = true;\r\n            \r\n\r\n            while (column != 9){               //check if current column contains number already\r\n                if (newMap[i][column] == solution){\r\n                    isProper = false;\r\n                    break;\r\n                }\r\n                else if (isProper == false){\r\n                    break;\r\n                }\r\n                else {\r\n                    //added this\r\n                    while (row != 9){\r\n                        if(newMap[row][j] == solution){\r\n                            isProper = false;\r\n                            break;\r\n                        }\r\n                        else{\r\n                            row++;\r\n                            console.log(\"row = \" + row + \" and j = \" + j);\r\n                        }\r\n                    }\r\n\r\n                    //possible.push(solution);\r\n                    column++;\r\n                    console.log(\"column = \" + column + \" and i = \" + i);\r\n                }\r\n            }\r\n            if(isProper == false){\r\n                console.log(solution + \" didn't work\");\r\n            }\r\n            else{\r\n                possible.push(solution);\r\n                console.log(possible + \" worked\");\r\n\r\n            }\r\n            if (possible.length == 1){  \r\n                answer = possible[0];\r\n            }\r\n            else{\r\n                return 0;\r\n            }\r\n        }\r\n        return answer;\r\n    }\r\n\r\n    solve = () => {\r\n        // No easy way to check if sudoku is solvable before attempting\r\n        // attempting brute force (preserve \"rule of one digit per block/column/row\" and filling in empty spaces)\r\n        \r\n        let newMap = this.state.map.slice();\r\n        \r\n        newMap[0][1] = this.oneRule(newMap, 0, 1);\r\n        //double for-loop iterates through matrix\r\n/*      for(let i = 0; i < 9; i++){\r\n            for(let j = 0; j < 9; j++){\r\n                if(newMap[i][j] == 0){      //if cell is empty, put correct answer in\r\n                    \r\n                    //push attempt solution onto string of possible solutions, only setting solutions with 1 possibility\r\n                    newMap[i][j] = this.oneRule(newMap, i, j);*/\r\n\r\n\r\n\r\n//          <TODO> Fix backtracking issue <TODO>                    \r\n             //       newMap[i][j] = this.oneRule(newMap, i, j);                            \r\n//                }\r\n//            }\r\n//        }\r\n\r\n\r\n        //this.setState({map: newMap});\r\n        console.log(\"Solved\");\r\n        return;\r\n    }\r\n\r\n    \r\n    //<input onChange = {this.handleInput} placeholder=\"Enter Number\"></input>\r\n    //<button onClick={this.logValue}>Log value</button>\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div id=\"title\">\r\n                    <div className = \"head\">\r\n                        Sudoku Solver\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n\r\n            <table>\r\n            \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 0)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 1)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 2)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 3)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 4)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 5)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 6)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 7)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 0, 8)} maxLength = \"1\" /> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 0)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 1)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 2)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 3)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 4)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 5)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 6)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 7)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 1, 8)} maxLength = \"1\" /> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 0)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 1)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 2)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 3)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 4)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 5)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 6)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 7)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 2, 8)} maxLength = \"1\" /> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 0)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 1)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 2)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 3)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 4)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 5)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 6)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 7)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 3, 8)} maxLength = \"1\" /> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 0)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 1)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 2)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 3)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 4)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 5)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 6)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 7)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 4, 8)} maxLength = \"1\" /> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 0)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 1)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 2)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 3)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 4)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 5)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 6)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 7)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 5, 8)} maxLength = \"1\" /> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 0)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 1)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 2)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 3)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 4)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 5)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 6)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 7)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 6, 8)} maxLength = \"1\" /> </td>\r\n                </tr>\r\n                  \r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 0)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 1)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 2)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 3)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 4)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 5)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 6)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 7)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 7, 8)} maxLength = \"1\" /> </td>\r\n                </tr>\r\n                <tr>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 0)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 1)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 2)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 3)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 4)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 5)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 6)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 7)} maxLength = \"1\" /> </td>\r\n                <td> <input type = \"text\" onInput = {(ev) => this.handleInput(ev, 8, 8)} maxLength = \"1\" /> </td>\r\n                </tr>\r\n                <th colSpan=\"9\">\r\n                    <button onClick = {this.solve}> Solve </button>\r\n                </th>\r\n                \r\n            </table>\r\n            \r\n            </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}